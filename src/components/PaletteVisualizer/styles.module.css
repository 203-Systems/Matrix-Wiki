.paletteVisualizer {
  position: relative;
  display: flex;
  flex-direction: row;
  background-color: rgb(235, 235, 235);
  border-radius: 10px;
  overflow: visible; /* Allow content to flow beyond the container */
  height: auto; /* Automatically adjust height based on content */
  font-family: "Roboto", sans-serif;
  flex-grow: 0; /* Prevent it from forcibly taking remaining space */
  width: 100%; /* Optional: Ensure it spans the full width of its parent */
  transition: background-color 0.3s ease, filter 0.3s ease; /* Add transitions */
}

[data-theme='dark'] .paletteVisualizer {
  background-color: rgb(15, 15, 15);
}

.gridContainer {
  display: grid;
  grid-template-columns: repeat(16, 1fr); /* Adjust columns */
  gap: 5px;
  padding: 20px;
  width: 100%;
  box-sizing: border-box; /* Includes padding in the height calculation */
}



.paletteVisualizerColorOverride {
  /* filter: grayscale(20%) brightness(80%); */
}



@media screen and (max-width: 996px) {
  .gridContainer {
    grid-template-columns: repeat(8, 1fr); /* Adjust columns */
    gap: 5px
  }
}

.gridItem {
  isolation: isolate; /* Prevent parent filter effects */
  filter: none; /* Reset filter for child elements */
  display: flex;
  justify-content: center;
  align-items: center;
  aspect-ratio: 1 / 1; /* Ensures the grid item is a square */
  color: #000;
  cursor: pointer;
  transition: transform 0.2s, box-shadow 0.2s;
  width: 100%; /* Make the item stretch within its grid cell */
  height: 100%; /* Matches width for the square shape */
  box-sizing: border-box; /* Includes padding/borders in size */
}


.colorLabel {
  filter: invert(1) grayscale(1) brightness(1.3) contrast(1000);
  font-size: 120%;
  mix-blend-mode: luminosity;
  font-weight: 500;
  font-family: "Roboto", sans-serif;
}

.gridItem:hover {
  transform: scale(1.1);
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);
}